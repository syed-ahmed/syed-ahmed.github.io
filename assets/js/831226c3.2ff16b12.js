"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6341],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=u(n),m=r,y=d["".concat(s,".").concat(m)]||d[m]||p[m]||i;return n?a.createElement(y,o(o({ref:t},c),{},{components:n})):a.createElement(y,o({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var u=2;u<i;u++)o[u]=n[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6027:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return p}});var a=n(7462),r=n(3366),i=(n(7294),n(3905)),o=["components"],l={},s="From Software Bugs to Security Vulnerabilities",u={unversionedId:"LLVM/CIS 547 Software Analysis/Module 1: Introduction to Software Analysis/reading_1",id:"LLVM/CIS 547 Software Analysis/Module 1: Introduction to Software Analysis/reading_1",title:"From Software Bugs to Security Vulnerabilities",description:"- Software bugs cause damages:",source:"@site/docs/LLVM/CIS 547 Software Analysis/Module 1: Introduction to Software Analysis/1_reading_1.md",sourceDirName:"LLVM/CIS 547 Software Analysis/Module 1: Introduction to Software Analysis",slug:"/LLVM/CIS 547 Software Analysis/Module 1: Introduction to Software Analysis/reading_1",permalink:"/docs/LLVM/CIS 547 Software Analysis/Module 1: Introduction to Software Analysis/reading_1",editUrl:"https://github.com/syed-ahmed/syed-ahmed.github.io/blob/main/website/docs/LLVM/CIS 547 Software Analysis/Module 1: Introduction to Software Analysis/1_reading_1.md?plain=1",tags:[],version:"current",sidebarPosition:1,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Introduction to Software Analysis",permalink:"/docs/LLVM/CIS 547 Software Analysis/Module 1: Introduction to Software Analysis/intro"},next:{title:"Course VM and Lab Instructions",permalink:"/docs/LLVM/CIS 547 Software Analysis/Module 1: Introduction to Software Analysis/course_vm_lab"}},c={},p=[{value:"Case Study 1: OpenSSL Heatbleed Bug CVE-2014-0160",id:"case-study-1-openssl-heatbleed-bug-cve-2014-0160",level:2},{value:"Case Study 2: Apple&#39;s &quot;Goto Fail&quot; Bug CVE-2014-1266",id:"case-study-2-apples-goto-fail-bug-cve-2014-1266",level:2},{value:"Case Study 3: VLC Media Player Dependency Bug CVE-2019-13615",id:"case-study-3-vlc-media-player-dependency-bug-cve-2019-13615",level:2}],d={toc:p};function m(e){var t=e.components,n=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"from-software-bugs-to-security-vulnerabilities"},"From Software Bugs to Security Vulnerabilities"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Software bugs cause damages:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Therac-25 radiation overdose."),(0,i.kt)("li",{parentName:"ul"},"Ariane-5 rocket disaster."),(0,i.kt)("li",{parentName:"ul"},"Northeastern blackout in 2003."),(0,i.kt)("li",{parentName:"ul"},"Security vulnerablilities."))),(0,i.kt)("li",{parentName:"ul"},"Program analysis can prevent bugs."),(0,i.kt)("li",{parentName:"ul"},"Common Vulnerabilities and Exposures (CVE)",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Catalog security vulnerablilities."),(0,i.kt)("li",{parentName:"ul"},"CVE ID number."),(0,i.kt)("li",{parentName:"ul"},"Description."),(0,i.kt)("li",{parentName:"ul"},"References.")))),(0,i.kt)("h2",{id:"case-study-1-openssl-heatbleed-bug-cve-2014-0160"},"Case Study 1: OpenSSL Heatbleed Bug CVE-2014-0160"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"OpenSSL used to secure communication over computer networks."),(0,i.kt)("li",{parentName:"ul"},"Heartbleed eavesdropped on SSL/TLS encryption protocol."),(0,i.kt)("li",{parentName:"ul"},'Bug in TLS "heartbeat extension", a protocol to check if server is alive.'),(0,i.kt)("li",{parentName:"ul"},"Server sends back positive acknowledgement by returning copy of received data."),(0,i.kt)("li",{parentName:"ul"},"Code for processing incoming message:",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"hbtype = *p++;\nn2s(p, payload);        // write two bytes from \u2018p\u2019 into \u2018payload\u2019\npl = p;  // \u2018pl\u2019 now points to contents of payload\n"))),(0,i.kt)("li",{parentName:"ul"},"Code for constructing reply:",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"*bp++ = TLS1_HB_RESPONSE;\nn2s(payload, bp);       // write two bytes from \u2018payload\u2019 into \u2018bp\u2019 \nmemcpy(bp, pl, payload) // copy \u2018payload\u2019 bytes from \u2018pl\u2019 to \u2018bp\u2019\n"))),(0,i.kt)("li",{parentName:"ul"},"Send a message with small payload data but specify different longer length, ",(0,i.kt)("inlineCode",{parentName:"li"},"memcpy")," will\nread more data."),(0,i.kt)("li",{parentName:"ul"},"Needs bounds-checking to prevent this:",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"hbtype = *p++;\nn2s(p, payload);\nif (1 + 2 + payload + 16 > ...) // \u201c...\u201d is received message\u2019s length\n    return 0;  // silently discard per RFC 6520 sec. 4\npl = p;\n"))),(0,i.kt)("li",{parentName:"ul"},"Automatically discover using dynamic/static analysis."),(0,i.kt)("li",{parentName:"ul"},"Dynamic approach: use LibFuzzer, Address Sanitizer. Fuzzer constructs abnormal inputs.\nSanitizer errors out memcpy."),(0,i.kt)("li",{parentName:"ul"},"Static approach: use Coverity, information-flow/taint-tracking analysis.")),(0,i.kt)("h2",{id:"case-study-2-apples-goto-fail-bug-cve-2014-1266"},'Case Study 2: Apple\'s "Goto Fail" Bug CVE-2014-1266'),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Capture and modify data in sessions secured by SSL/TLS."),(0,i.kt)("li",{parentName:"ul"},"Bug in function that verifies SSL key exchange.",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"static OSStatus SSLVerifySignedServerKeyExchange( ... ) {\n...\nif ((err = SSLHashSHA1.update(&hashCtx, &signedParams)) != 0)\n    goto fail;\n    // highlight-next-line\n    goto fail;\n...\nerr = sslRawVerify( ... );\n...\nfail:\n    SSLFreeBuffer(&signedHashes);\n    SSLFreeBuffer(&hashCtx);\n    return err;\n}\n"))),(0,i.kt)("li",{parentName:"ul"},"Second ",(0,i.kt)("inlineCode",{parentName:"li"},"goto fail")," is unconditional."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"sslRawVerify")," is bypassed."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"SSLVerifySignedServerKeyExchange")," function returns successful even when it's not."),(0,i.kt)("li",{parentName:"ul"},"Attacker can do man-in-the-middle attack."),(0,i.kt)("li",{parentName:"ul"},"Automatically detect bug using static analysis."),(0,i.kt)("li",{parentName:"ul"},"Unreachable code analysis: can reveal portion of code unreachable after the second goto statement.")),(0,i.kt)("h2",{id:"case-study-3-vlc-media-player-dependency-bug-cve-2019-13615"},"Case Study 3: VLC Media Player Dependency Bug CVE-2019-13615"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Heap-based buffer over-read in EBML component that parses media types."),(0,i.kt)("li",{parentName:"ul"},"Enabled remote code execution and access user's machine if user opened a malicious file."),(0,i.kt)("li",{parentName:"ul"},"Bug in:",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"EbmlElement* EbmlElement::FindNextElement( ... ) {\n...\ndo {\n    ...\n    if (DataStream.read(&PossibleIdNSize[ReadIndex++], 1) == 0) {\n        return NULL;\n    }\n    ReadSize++;\n    ...\nwhile (...);\n...\n}\n"))),(0,i.kt)("li",{parentName:"ul"},"Bound-check missing before reading, attacker can read beyond bounds. Fix:",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"EbmlElement * EbmlElement::FindNextElement(...) {\n    ...\n    // highlight-start\n    if (MaxDataSize <= ReadSize)\n        break;\n    // highlight-end\n    if (DataStream.read(&PossibleIdNSize[ReadIndex++], 1) == 0) {\n        return NULL;\n    }\n    ReadSize++;\n    ...\n}\n"))),(0,i.kt)("li",{parentName:"ul"},"Use fuzzing to automatically detect this.")))}m.isMDXComponent=!0}}]);