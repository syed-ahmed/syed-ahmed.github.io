"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6740],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return s}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),u=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=u(e.components);return n.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),m=u(r),s=o,v=m["".concat(l,".").concat(s)]||m[s]||d[s]||a;return r?n.createElement(v,i(i({ref:t},p),{},{components:r})):n.createElement(v,i({ref:t},p))}));function s(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var u=2;u<a;u++)i[u]=r[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},2118:function(e,t,r){r.r(t),r.d(t,{assets:function(){return p},contentTitle:function(){return l},default:function(){return s},frontMatter:function(){return c},metadata:function(){return u},toc:function(){return d}});var n=r(7462),o=r(3366),a=(r(7294),r(3905)),i=["components"],c={},l="Code Coverage",u={unversionedId:"MISC/code_cov",id:"MISC/code_cov",title:"Code Coverage",description:"With g++ and lcov",source:"@site/docs/MISC/code_cov.md",sourceDirName:"MISC",slug:"/MISC/code_cov",permalink:"/docs/MISC/code_cov",editUrl:"https://github.com/syed-ahmed/syed-ahmed.github.io/blob/main/website/docs/MISC/code_cov.md?plain=1",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"vectors",permalink:"/docs/Linear Algebra/lin_alg_1/Chapter 1/vectors"},next:{title:"Colorize Terminal",permalink:"/docs/MISC/colorize_terminal"}},p={},d=[{value:"With g++ and lcov",id:"with-g-and-lcov",level:2},{value:"With clang and llvm-cov",id:"with-clang-and-llvm-cov",level:2}],m={toc:d};function s(e){var t=e.components,r=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"code-coverage"},"Code Coverage"),(0,a.kt)("h2",{id:"with-g-and-lcov"},"With g++ and lcov"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Compile with no optimization: ",(0,a.kt)("inlineCode",{parentName:"li"},"-O0 --coverage"),". Will output ",(0,a.kt)("inlineCode",{parentName:"li"},"*.gcno"),"."),(0,a.kt)("li",{parentName:"ul"},"Run the binary. Will output ",(0,a.kt)("inlineCode",{parentName:"li"},"*.gcda"),"."),(0,a.kt)("li",{parentName:"ul"},"Generate lcov trace from the directory with ",(0,a.kt)("inlineCode",{parentName:"li"},"*.gcda"),"s:",(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"},"lcov --rc lcov_branch_coverage=1 --capture --directory . --output-file coverage.info\n"))),(0,a.kt)("li",{parentName:"ul"},"Generate htmls:",(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"},"genhtml --rc genhtml_branch_coverage=1 coverage.info --output-directory out\n"))),(0,a.kt)("li",{parentName:"ul"},"Note: you need the ",(0,a.kt)("inlineCode",{parentName:"li"},"rc")," flags to show branch coverage.")),(0,a.kt)("h2",{id:"with-clang-and-llvm-cov"},"With clang and llvm-cov"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Follow the instructions in: ",(0,a.kt)("a",{parentName:"li",href:"https://clang.llvm.org/docs/SourceBasedCodeCoverage.html"},"https://clang.llvm.org/docs/SourceBasedCodeCoverage.html"))))}s.isMDXComponent=!0}}]);