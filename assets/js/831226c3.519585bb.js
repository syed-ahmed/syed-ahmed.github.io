"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6341],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>y});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),u=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},p=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),c=u(a),m=r,y=c["".concat(s,".").concat(m)]||c[m]||d[m]||i;return a?n.createElement(y,l(l({ref:t},p),{},{components:a})):n.createElement(y,l({ref:t},p))}));function y(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[c]="string"==typeof e?e:r,l[1]=o;for(var u=2;u<i;u++)l[u]=a[u];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},6027:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>u});var n=a(7462),r=(a(7294),a(3905));const i={},l="From Software Bugs to Security Vulnerabilities",o={unversionedId:"LLVM/CIS 547 Software Analysis/Module 1: Introduction to Software Analysis/reading_1",id:"LLVM/CIS 547 Software Analysis/Module 1: Introduction to Software Analysis/reading_1",title:"From Software Bugs to Security Vulnerabilities",description:"- Software bugs cause damages:",source:"@site/docs/LLVM/CIS 547 Software Analysis/Module 1: Introduction to Software Analysis/1_reading_1.md",sourceDirName:"LLVM/CIS 547 Software Analysis/Module 1: Introduction to Software Analysis",slug:"/LLVM/CIS 547 Software Analysis/Module 1: Introduction to Software Analysis/reading_1",permalink:"/docs/LLVM/CIS 547 Software Analysis/Module 1: Introduction to Software Analysis/reading_1",editUrl:"https://github.com/syed-ahmed/syed-ahmed.github.io/blob/main/website/docs/LLVM/CIS 547 Software Analysis/Module 1: Introduction to Software Analysis/1_reading_1.md?plain=1",tags:[],version:"current",sidebarPosition:1,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Introduction to Software Analysis",permalink:"/docs/LLVM/CIS 547 Software Analysis/Module 1: Introduction to Software Analysis/intro"},next:{title:"Course VM and Lab Instructions",permalink:"/docs/LLVM/CIS 547 Software Analysis/Module 1: Introduction to Software Analysis/course_vm_lab"}},s={},u=[{value:"Case Study 1: OpenSSL Heatbleed Bug CVE-2014-0160",id:"case-study-1-openssl-heatbleed-bug-cve-2014-0160",level:2},{value:"Case Study 2: Apple&#39;s &quot;Goto Fail&quot; Bug CVE-2014-1266",id:"case-study-2-apples-goto-fail-bug-cve-2014-1266",level:2},{value:"Case Study 3: VLC Media Player Dependency Bug CVE-2019-13615",id:"case-study-3-vlc-media-player-dependency-bug-cve-2019-13615",level:2}],p={toc:u},c="wrapper";function d(e){let{components:t,...a}=e;return(0,r.kt)(c,(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"from-software-bugs-to-security-vulnerabilities"},"From Software Bugs to Security Vulnerabilities"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Software bugs cause damages:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Therac-25 radiation overdose."),(0,r.kt)("li",{parentName:"ul"},"Ariane-5 rocket disaster."),(0,r.kt)("li",{parentName:"ul"},"Northeastern blackout in 2003."),(0,r.kt)("li",{parentName:"ul"},"Security vulnerablilities."))),(0,r.kt)("li",{parentName:"ul"},"Program analysis can prevent bugs."),(0,r.kt)("li",{parentName:"ul"},"Common Vulnerabilities and Exposures (CVE)",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Catalog security vulnerablilities."),(0,r.kt)("li",{parentName:"ul"},"CVE ID number."),(0,r.kt)("li",{parentName:"ul"},"Description."),(0,r.kt)("li",{parentName:"ul"},"References.")))),(0,r.kt)("h2",{id:"case-study-1-openssl-heatbleed-bug-cve-2014-0160"},"Case Study 1: OpenSSL Heatbleed Bug CVE-2014-0160"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"OpenSSL used to secure communication over computer networks."),(0,r.kt)("li",{parentName:"ul"},"Heartbleed eavesdropped on SSL/TLS encryption protocol."),(0,r.kt)("li",{parentName:"ul"},'Bug in TLS "heartbeat extension", a protocol to check if server is alive.'),(0,r.kt)("li",{parentName:"ul"},"Server sends back positive acknowledgement by returning copy of received data."),(0,r.kt)("li",{parentName:"ul"},"Code for processing incoming message:",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"hbtype = *p++;\nn2s(p, payload);        // write two bytes from \u2018p\u2019 into \u2018payload\u2019\npl = p;  // \u2018pl\u2019 now points to contents of payload\n"))),(0,r.kt)("li",{parentName:"ul"},"Code for constructing reply:",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"*bp++ = TLS1_HB_RESPONSE;\nn2s(payload, bp);       // write two bytes from \u2018payload\u2019 into \u2018bp\u2019 \nmemcpy(bp, pl, payload) // copy \u2018payload\u2019 bytes from \u2018pl\u2019 to \u2018bp\u2019\n"))),(0,r.kt)("li",{parentName:"ul"},"Send a message with small payload data but specify different longer length, ",(0,r.kt)("inlineCode",{parentName:"li"},"memcpy")," will\nread more data."),(0,r.kt)("li",{parentName:"ul"},"Needs bounds-checking to prevent this:",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"hbtype = *p++;\nn2s(p, payload);\nif (1 + 2 + payload + 16 > ...) // \u201c...\u201d is received message\u2019s length\n    return 0;  // silently discard per RFC 6520 sec. 4\npl = p;\n"))),(0,r.kt)("li",{parentName:"ul"},"Automatically discover using dynamic/static analysis."),(0,r.kt)("li",{parentName:"ul"},"Dynamic approach: use LibFuzzer, Address Sanitizer. Fuzzer constructs abnormal inputs.\nSanitizer errors out memcpy."),(0,r.kt)("li",{parentName:"ul"},"Static approach: use Coverity, information-flow/taint-tracking analysis.")),(0,r.kt)("h2",{id:"case-study-2-apples-goto-fail-bug-cve-2014-1266"},'Case Study 2: Apple\'s "Goto Fail" Bug CVE-2014-1266'),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Capture and modify data in sessions secured by SSL/TLS."),(0,r.kt)("li",{parentName:"ul"},"Bug in function that verifies SSL key exchange.",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"static OSStatus SSLVerifySignedServerKeyExchange( ... ) {\n...\nif ((err = SSLHashSHA1.update(&hashCtx, &signedParams)) != 0)\n    goto fail;\n    // highlight-next-line\n    goto fail;\n...\nerr = sslRawVerify( ... );\n...\nfail:\n    SSLFreeBuffer(&signedHashes);\n    SSLFreeBuffer(&hashCtx);\n    return err;\n}\n"))),(0,r.kt)("li",{parentName:"ul"},"Second ",(0,r.kt)("inlineCode",{parentName:"li"},"goto fail")," is unconditional."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"sslRawVerify")," is bypassed."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"SSLVerifySignedServerKeyExchange")," function returns successful even when it's not."),(0,r.kt)("li",{parentName:"ul"},"Attacker can do man-in-the-middle attack."),(0,r.kt)("li",{parentName:"ul"},"Automatically detect bug using static analysis."),(0,r.kt)("li",{parentName:"ul"},"Unreachable code analysis: can reveal portion of code unreachable after the second goto statement.")),(0,r.kt)("h2",{id:"case-study-3-vlc-media-player-dependency-bug-cve-2019-13615"},"Case Study 3: VLC Media Player Dependency Bug CVE-2019-13615"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Heap-based buffer over-read in EBML component that parses media types."),(0,r.kt)("li",{parentName:"ul"},"Enabled remote code execution and access user's machine if user opened a malicious file."),(0,r.kt)("li",{parentName:"ul"},"Bug in:",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"EbmlElement* EbmlElement::FindNextElement( ... ) {\n...\ndo {\n    ...\n    if (DataStream.read(&PossibleIdNSize[ReadIndex++], 1) == 0) {\n        return NULL;\n    }\n    ReadSize++;\n    ...\nwhile (...);\n...\n}\n"))),(0,r.kt)("li",{parentName:"ul"},"Bound-check missing before reading, attacker can read beyond bounds. Fix:",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"EbmlElement * EbmlElement::FindNextElement(...) {\n    ...\n    // highlight-start\n    if (MaxDataSize <= ReadSize)\n        break;\n    // highlight-end\n    if (DataStream.read(&PossibleIdNSize[ReadIndex++], 1) == 0) {\n        return NULL;\n    }\n    ReadSize++;\n    ...\n}\n"))),(0,r.kt)("li",{parentName:"ul"},"Use fuzzing to automatically detect this.")))}d.isMDXComponent=!0}}]);