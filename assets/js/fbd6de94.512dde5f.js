"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[207],{3214:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>l,contentTitle:()=>t,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>a});var s=o(4848),c=o(8453);const r={},t="Getting code coverage info in PyTorch",i={id:"PyTorch/code_coverage",title:"Getting code coverage info in PyTorch",description:"- Build pytorch from source with the necessary flags for coverage - -DUSECPPCODECOVERAGE=ON -DBUILDTEST=ON -DCMAKEBUILDTYPE=Debug:",source:"@site/docs/PyTorch/code_coverage.md",sourceDirName:"PyTorch",slug:"/PyTorch/code_coverage",permalink:"/docs/PyTorch/code_coverage",draft:!1,unlisted:!1,editUrl:"https://github.com/syed-ahmed/syed-ahmed.github.io/blob/main/website/docs/PyTorch/code_coverage.md?plain=1",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"SSH into server without domain name",permalink:"/docs/MISC/ssh_host_name"},next:{title:"Exercise 1",permalink:"/docs/PyTorch/nvfuser_exercises/exercise_1"}},l={},a=[];function d(e){const n={a:"a",code:"code",h1:"h1",li:"li",pre:"pre",ul:"ul",...(0,c.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"getting-code-coverage-info-in-pytorch",children:"Getting code coverage info in PyTorch"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Build pytorch from source with the necessary flags for coverage - ",(0,s.jsx)(n.code,{children:"-DUSE_CPP_CODE_COVERAGE=ON -DBUILD_TEST=ON -DCMAKE_BUILD_TYPE=Debug"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["If using GCC:","\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"python setup.py build --cmake-only\ncd build && \\\n    cmake .. -DUSE_CPP_CODE_COVERAGE=ON -DBUILD_TEST=ON -DCMAKE_BUILD_TYPE=Debug && \\\n    cd ../\nMAX_JOBS=8 python setup.py develop\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["If using clang:","\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"sudo apt install clang-12 libomp-12-dev --install-suggests\nsudo ln -s /usr/bin/clang++-12 /usr/bin/clang++\nsudo ln -s /usr/bin/clang-12 /usr/bin/clang\nCC=clang CXX=clang++ python setup.py build --cmake-only\ncd build && \\\n    cmake .. -DUSE_CPP_CODE_COVERAGE=ON -DBUILD_TEST=ON -DCMAKE_BUILD_TYPE=Debug && \\\n    cd ../\nMAX_JOBS=8 python setup.py develop\n"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Run ",(0,s.jsx)(n.code,{children:"pytorch/tools/code_coverage/oss_coverage.py"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["If using GCC:","\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"python oss_coverage.py --export --summary\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["If using clang:","\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"CXX=clang++ LLVM_TOOL_PATH=/usr/lib/llvm-12/bin/ python oss_coverage.py\n/usr/lib/llvm-12/bin/llvm-cov show -output-dir=out/report -format=html -instr-profile=/home/syeahmed/workspace/pytorch/tools/code_coverage/package/util/../../profile/merged/test_jit.merged -object /home/syeahmed/workspace/pytorch/build/bin/test_jit\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Use ",(0,s.jsx)(n.code,{children:"--run-only"})," and ",(0,s.jsx)(n.code,{children:"--interest-only"})," options to create focused reports (",(0,s.jsx)(n.a,{href:"https://github.com/pytorch/pytorch/blob/master/tools/code_coverage/README.md",children:"README"}),")"]}),"\n"]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>t,x:()=>i});var s=o(6540);const c={},r=s.createContext(c);function t(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:t(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);